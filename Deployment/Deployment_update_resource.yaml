#To update the resource using command 
#kubectl set resources deployment/my-dp-multiapp -c=nginxtest --limits=cpu=200m,memory=512Mi
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: "2020-04-18T13:32:19Z"
  generateName: my-dp-multiapp-7ccd6fccd5-
  labels:
    app: my-dp-multiapp
    pod-template-hash: 7ccd6fccd5
  managedFields:
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:generateName: {}
        f:labels:
          .: {}
          f:app: {}
          f:pod-template-hash: {}
        f:ownerReferences:
          .: {}
          k:{"uid":"21a1c8c1-65ed-49cd-9288-31d41052d13e"}:
            .: {}
            f:apiVersion: {}
            f:blockOwnerDeletion: {}
            f:controller: {}
            f:kind: {}
            f:name: {}
            f:uid: {}
      f:spec:
        f:containers:
          k:{"name":"jenkinstest"}:
            .: {}
            f:image: {}
            f:imagePullPolicy: {}
            f:name: {}
            f:ports:
              .: {}
              k:{"containerPort":8080,"protocol":"TCP"}:
                .: {}
                f:containerPort: {}
                f:name: {}
                f:protocol: {}
              k:{"containerPort":50000,"protocol":"TCP"}:
                .: {}
                f:containerPort: {}
                f:name: {}
                f:protocol: {}
            f:resources: {}
            f:terminationMessagePath: {}
            f:terminationMessagePolicy: {}
          k:{"name":"nginxtest"}:
            .: {}
            f:image: {}
            f:imagePullPolicy: {}
            f:name: {}
            f:ports:
              .: {}
              k:{"containerPort":80,"protocol":"TCP"}:
                .: {}
                f:containerPort: {}
                f:name: {}
                f:protocol: {}
            f:resources:
              .: {}
              f:limits:
                .: {}
                f:cpu: {}
                f:memory: {}
              f:requests:
                .: {}
                f:cpu: {}
                f:memory: {}
            f:terminationMessagePath: {}
            f:terminationMessagePolicy: {}
        f:dnsPolicy: {}
        f:enableServiceLinks: {}
        f:restartPolicy: {}
        f:schedulerName: {}
        f:securityContext: {}
        f:terminationGracePeriodSeconds: {}
    manager: kube-controller-manager
    operation: Update
    time: "2020-04-18T13:32:19Z"
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:status:
        f:conditions:
          k:{"type":"ContainersReady"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
          k:{"type":"Initialized"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
          k:{"type":"Ready"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
        f:containerStatuses: {}
        f:hostIP: {}
        f:phase: {}
        f:podIP: {}
        f:podIPs:
          .: {}
          k:{"ip":"10.244.1.14"}:
            .: {}
            f:ip: {}
        f:startTime: {}
    manager: kubelet
    operation: Update
    time: "2020-04-18T13:32:28Z"
  name: my-dp-multiapp-7ccd6fccd5-ws5g7
  namespace: default
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: ReplicaSet
    name: my-dp-multiapp-7ccd6fccd5
    uid: 21a1c8c1-65ed-49cd-9288-31d41052d13e
  resourceVersion: "111562"
  selfLink: /api/v1/namespaces/default/pods/my-dp-multiapp-7ccd6fccd5-ws5g7
  uid: 54d3c885-9511-41dc-80bd-0807b5a0b889
spec:
  containers:
  - image: nginx:1.9.1
    imagePullPolicy: Always
    name: nginxtest
    ports:
    - containerPort: 80
      name: nginxport
      protocol: TCP
    resources:
      limits:
        cpu: 200m
        memory: 512Mi
      requests:
        cpu: 200m
        memory: 512Mi
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: default-token-xlzkg
      readOnly: true
  - image: jenkins/jenkins:lts
    imagePullPolicy: IfNotPresent
    name: jenkinstest
    ports:
    - containerPort: 8080
      name: jenkinport
      protocol: TCP
    - containerPort: 50000
      name: slaveagent
      protocol: TCP
    resources: {}
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: default-token-xlzkg
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  nodeName: kubeworker
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: default
  serviceAccountName: default
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  volumes:
  - name: default-token-xlzkg
    secret:
      defaultMode: 420
      secretName: default-token-xlzkg
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2020-04-18T12:47:43Z"
    status: "True"
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: "2020-04-18T12:47:51Z"
    status: "True"
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: "2020-04-18T12:47:51Z"
    status: "True"
    type: ContainersReady
  - lastProbeTime: null
    lastTransitionTime: "2020-04-18T13:32:19Z"
    status: "True"
    type: PodScheduled
  containerStatuses:
  - containerID: docker://305b11deb7fd93b9ad7199bf9309ddd0b75cf43cd94dab67764e39b5e1260993
    image: jenkins/jenkins:lts
    imageID: docker-pullable://jenkins/jenkins@sha256:af0110d8f70d2fbaf9429c321dc4e3bc5aae12f708c655f4018e7ed4be0974f5
    lastState: {}
    name: jenkinstest
    ready: true
    restartCount: 0
    started: true
    state:
      running:
        startedAt: "2020-04-18T12:47:51Z"
  - containerID: docker://5d84cae64054f485c23ff6e999ed038c0a1e66b08b10a563c5d71825d471789b
    image: nginx:1.9.1
    imageID: docker-pullable://nginx@sha256:2f68b99bc0d6d25d0c56876b924ec20418544ff28e1fb89a4c27679a40da811b
    lastState: {}
    name: nginxtest
    ready: true
    restartCount: 0
    started: true
    state:
      running:
        startedAt: "2020-04-18T12:47:50Z"
  hostIP: 192.168.0.111
  phase: Running
  podIP: 10.244.1.14
  podIPs:
  - ip: 10.244.1.14
  qosClass: Burstable
  startTime: "2020-04-18T12:47:43Z"
